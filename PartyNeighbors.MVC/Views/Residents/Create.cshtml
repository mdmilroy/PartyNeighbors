@model PartyNeighbors.Data.Resident

@{
    ViewBag.Title = "Join a Neighborhood";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NeighborhoodId, "Neighborhood", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NeighborhoodId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NeighborhoodId, "", new { @class = "text-danger" })

                <!-- TODO add dynamic addition of unlisted neighborhood to a modal here-->
                @*<div class="btn btn-default btn-sm" id="newNeighborhood" style="margin-top: 10px">
                    Neighborhood not listed?
                </div>*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
        @Html.ActionLink("Back to List", "Index", null, new {  @class = "btn btn-default btn-large" })
</div>


<!--TODO find way to make this work within a modal or some sort of dynamic popup-->

  
@*<div id="myNeighborhoodModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

         Modal content
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add a Neighborhood</h4>
            </div>
            <div class="modal-body" id="neighborhoodModalBody">
                <div>Neighborhood Name</div> <input type="text" name="name" />
                <div>City</div> <input type="text" name="name" />
                @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })
                <div>Zip Code</div> <input type="number" name="name" />
            </div>
            <div class="modal-footer">
                @{ var neighborhood = new PartyNeighbors.Data.Neighborhood()
                   {
                       Name = 
                   }
                   }
                <input type="submit" value="Create" class="btn btn-default" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">

    $("document").ready(function () {
        $("#newNeighborhood").click(function () {
            //var url = "~/Neighborhoods/UnlistedNeighborhoodPartial";
            //$("#neighborhoodModalBody").load(url, function () {
            $("#myNeighborhoodModal").modal("show");
                            //});
                        });
                    });

</script>*@