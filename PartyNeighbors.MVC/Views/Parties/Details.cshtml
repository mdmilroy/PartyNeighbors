@model PartyNeighbors.Data.Party

@{
    ViewBag.Title = "Party Details";
}

<h2>@ViewBag.Title</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.PartyName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PartyName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PartyTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PartyTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Neighborhood.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Neighborhood.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Category.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Category.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Capacity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Capacity)
        </dd>

    </dl>
</div>

<p>
    <span><a id="guestsList">People Attending</a></span> |
    <span><a id="RSVP">Join Us!</a></span> |
    <span><a id="remove">Need to Cancel?</a></span> |
    @Html.ActionLink("Edit", "Edit", new { id = Model.PartyId }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<table class="table guests">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Residents.First().FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Neighborhood.Name)
        </th>
    </tr>

    @foreach (var item in Model.Residents)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Neighborhood.Name)
            </td>
        </tr>
    }
</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#remove').hide()
            $('.guests').hide()

            $('#guestsList').on('click', () => {
                $('.guests').toggle()
            });

            $('#RSVP').on('click', event => {
                @addRSVP(Model.PartyId);
                $(event.currentTarget).hide();
                $('#remove').show();
            });
        });
    </script>
}

@using System.Linq;
@using Microsoft.AspNet.Identity;
@using PartyNeighbors.Data;
@{
    ApplicationDbContext db = new ApplicationDbContext();
    Party currentParty = db.Parties.Find(Model.PartyId);
    bool addRSVP(int partyId)
    {
        using (var ctx = new ApplicationDbContext())
        {
            var user = ctx.Residents.Find(User.Identity.GetUserId());
            var party = ctx.Parties.Single(p => p.PartyId == partyId);
            if (party.Residents.Count() < party.Capacity)
            {
                party.Residents.Add(user);
            }
            else
            {
                Console.WriteLine("Sorry, this party is at max capacity. Please find another party to join.");
            }
            return ctx.SaveChanges() == 1;
        };
    }
}