@model PartyNeighbors.Data.Party

@{
    ViewBag.Title = "Party Details";
}

<h2>@ViewBag.Title</h2>

@{ var ctx = new PartyNeighbors.Data.ApplicationDbContext();
   var host = ctx.Residents.SingleOrDefault(r => r.ResidentId == Model.HostId);
}
<div class="container-fluid card-group col-lg-12 indexCardDeck" id="searchHere">
    <div class="card indexItem">
        <div class="card-body">
            <div class="partyName">
                <h1 class="card-title">@Html.DisplayFor(model => model.PartyName)</h1>
            </div>
            <div class="cardInfo">
                @Html.HiddenFor(model => model.PartyId)
                <h5>@Html.DisplayFor(model => model.Neighborhood.Name)</h5>
                <p><strong>@Html.DisplayNameFor(model => model.Location.Name):</strong> @Html.DisplayFor(model => model.Location.Name)</p>
                @{ string partytime = Model.PartyTime.ToString("MMM dd, yyyy hh:mm tt");}
                <p><strong>@Html.DisplayNameFor(model => model.PartyTime):</strong> @Html.DisplayFor(modelItem => partytime)</p>
                <p><strong>@Html.DisplayNameFor(model => model.HostId):</strong> @Html.DisplayFor(modelItem => host.FullName)</p>
                <p><strong>@Html.DisplayNameFor(model => model.Category.Name):</strong> @Html.DisplayFor(model => model.Category.Name)</p>
                <p><strong>@Html.DisplayNameFor(model => model.Capacity):</strong> @Html.DisplayFor(model => model.Capacity)</p>
            </div>
        </div>
        <div class="card-footer" id="detailsItem">
            <span class="badge badge-pill badge-warning" id="edit">@Html.ActionLink("Edit", "Edit", new { id = Model.PartyId })</span>
            <span class="badge badge-pill badge-warning" id="delete">@Html.ActionLink("Delete", "Delete", new { id = Model.PartyId })</span>
        </div>
            <button class="btn btn-sm detailsBtn" id="RSVP">
                Join Us!
            </button>
            <button class="btn btn-sm detailsBtn">
                @Html.ActionLink("Back to List", "Index")
            </button>
            <a class="btn btn-sm detailsBtn" id="guestsList">People Attending</a>
    </div>
</div>


<table class="table guests">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Residents.First().FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Neighborhood.Name)
        </th>
    </tr>

    @foreach (var item in Model.Residents)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Neighborhood.Name)
            </td>
        </tr>
    }
</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#remove').hide()
            $('.guests').hide()

            $('#guestsList').on('click', () => {
                $('.guests').toggle()
            });

            $('#RSVP').on('click', event => {
                @addRSVP(Model.PartyId);
                $(event.currentTarget).hide();
            });
        });
    </script>
}

@using System.Linq;
    @using Microsoft.AspNet.Identity;
    @using PartyNeighbors.Data;
    @{
        ApplicationDbContext db = new ApplicationDbContext();
        Party currentParty = db.Parties.Find(Model.PartyId);
        bool addRSVP(int partyId)
        {
            var user = ctx.Residents.Find(User.Identity.GetUserId());
            var party = ctx.Parties.Single(p => p.PartyId == partyId);
            if (party.Residents.Count() < party.Capacity)
            {
                party.Residents.Add(user);
            }
            else
            {
                Console.WriteLine("Sorry, this party is at max capacity. Please find another party to join.");
            }
            return ctx.SaveChanges() == 1;
        }
    }